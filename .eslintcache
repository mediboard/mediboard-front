[{"/Users/porterhunley/mediboard/mediboard-front/src/reportWebVitals.js":"1","/Users/porterhunley/mediboard/mediboard-front/src/index.js":"2","/Users/porterhunley/mediboard/mediboard-front/src/body/DisplayBody.js":"3","/Users/porterhunley/mediboard/mediboard-front/src/App.js":"4","/Users/porterhunley/mediboard/mediboard-front/src/header/Header.js":"5","/Users/porterhunley/mediboard/mediboard-front/src/constants/apiconstants.js":"6","/Users/porterhunley/mediboard/mediboard-front/src/clientapis/DrugsHttpClient.js":"7","/Users/porterhunley/mediboard/mediboard-front/src/body/effects/EffectsChart.js":"8","/Users/porterhunley/mediboard/mediboard-front/src/body/DrugOverview.js":"9","/Users/porterhunley/mediboard/mediboard-front/src/InfoPage.js":"10","/Users/porterhunley/mediboard/mediboard-front/src/body/SideBar.js":"11","/Users/porterhunley/mediboard/mediboard-front/src/body/registration/registrationForm.js":"12","/Users/porterhunley/mediboard/mediboard-front/src/body/registration/registrationDisplay.js":"13","/Users/porterhunley/mediboard/mediboard-front/src/body/Banner.js":"14"},{"size":362,"mtime":1610655795789,"results":"15","hashOfConfig":"16"},{"size":500,"mtime":1610655795788,"results":"17","hashOfConfig":"18"},{"size":2712,"mtime":1612436640195,"results":"19","hashOfConfig":"16"},{"size":542,"mtime":1612444560929,"results":"20","hashOfConfig":"16"},{"size":3789,"mtime":1612107133538,"results":"21","hashOfConfig":"16"},{"size":56,"mtime":1610991545538,"results":"22","hashOfConfig":"16"},{"size":674,"mtime":1610915757056,"results":"23","hashOfConfig":"18"},{"size":1004,"mtime":1610912168288,"results":"24","hashOfConfig":"16"},{"size":1173,"mtime":1610925808910,"results":"25","hashOfConfig":"18"},{"size":449,"mtime":1610920407943,"results":"26","hashOfConfig":"18"},{"size":501,"mtime":1612108714627,"results":"27","hashOfConfig":"16"},{"size":1600,"mtime":1612444897647,"results":"28","hashOfConfig":"16"},{"size":450,"mtime":1612444593058,"results":"29","hashOfConfig":"16"},{"size":494,"mtime":1612444637387,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wnle5e",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1dopeeg",{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/porterhunley/mediboard/mediboard-front/src/reportWebVitals.js",[],"/Users/porterhunley/mediboard/mediboard-front/src/index.js",[],["67","68"],"/Users/porterhunley/mediboard/mediboard-front/src/body/DisplayBody.js",["69","70","71"],"import { React, useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport Typography from '@material-ui/core/Typography';\n\nimport DrugsHttpClient from '../clientapis/DrugsHttpClient';\nimport DrugOverview from './DrugOverview';\nimport SideBar from './SideBar';\n\n\nconst drugsHttpClient = new DrugsHttpClient();\n\nconst useStyles = makeStyles((theme) => ({\n\tdisplayContainer: {\n\t\tdisplay: 'block',\n\t\tpaddingLeft: 20,\n\t\tpaddingRight: 20,\n\t},\n\tdrugIcon: {\n\t\tfloat: 'left',\n\t\twidth: 'auto',\n\t},\n\tdrugHeader: {\n\t\theight: 'auto',\n\t\twidth: '100%',\n\t\tbackgroundColor: '#e3e3e3',\n\t\ttextAlign: 'left',\n\t},\n\tdrugInfo: {\n\t\theight: '100%',\n\t\twidth: '15%', //Maybe this should be the size of the content instead\n\t\tdisplay: 'inline-block',\n\t\ttextAlign: 'left'\n\t},\n\tdrugWindow: {\n\t\tpadding: 10,\n\t\tborderStyle: 'solid',\n\t\tborderWidth: 'thin',\n\t\tbackgroundColor: '#e3e3e3',\n\t\tfloat: 'right',\n\t},\n\tdisplayWindow: {\n\t\tmarginTop: 30,\n\t},\n\tdrugImage: {\n\t\tfontSize: \"7em\",\n\t},\n\ttoolbar: {\n\t\twidth: '100%',\n\t\tpaddingLeft: 113\n\t},\n\ttoolbarButton: {\n\t\tborderStyle: 'solid',\n\t\tborderWidth: 'thin',\n\t\ttextAlign: 'center',\n\t\twidth: 100,\n\t\tpaddingTop: 10,\n\t\tpaddingBottom: 10,\n\t\t\"&:hover\": {\n\t\t\tbackgroundColor: '#afb1c9',\n\t\t\tcursor: 'pointer',\n\t\t},\n\t},\n}))\n\n//TODO this file also needs to get the drug info\n\nexport default function DisplayBody(props) {\n\tconst classes = useStyles();\n\n\tconst [state, setState] = useState({ // All we need is the mode here \n\t\tmode: 'Overview',\n\t\teffectsData: {}\n\t});\n\n\tconst renderHeaderButton = (text) => {\n\t\treturn (\n\t\t\t<div id={text} className={classes.toolbarButton} onClick={(e) => handleToolbarButtonClick(e)} \n\t\t\tstyle={{backgroundColor: state.mode === text ? '#7882ff' : '#e3e3e3'}}>\n\t\t\t\t{text}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst handleToolbarButtonClick = (e) => {\n\t\tvar mode = e.target.id;\n\t\tsetState(prevState => ({\n\t\t\t...prevState,\n\t\t\tmode: mode\n\t\t}));\n\t\t// TODO props.setMode(mode)\n\t\te.target.style.backgroundColor = '#7882ff'; // This is eventually going to have to be moved to the sate\n\t}\n\n\treturn (\n\t\t<div className={classes.displayContainer}>\n\t\t\t<div className={classes.drugHeader}>\n\t\t\t\t<div className={classes.drugIcon}>\n\t\t\t\t\t<AddPhotoAlternateIcon className={classes.drugImage}/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.drugInfo}>\n\t\t\t\t\t<h3>{props.selectedDrug}</h3>\n\t\t\t\t\t<p>Some of these work</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.toolbar}>\n\t\t\t\t\t{renderHeaderButton('Overview')}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.displayWindow}>\n\t\t\t\t<div className={classes.drugWindow}>\n\t\t\t\t\t<DrugOverview {...{...props, ...state}}/>\n\t\t\t\t</div>\n\t\t\t\t<SideBar />\n\t\t\t</div>\t\n\t\t</div>\n\t)\n}","/Users/porterhunley/mediboard/mediboard-front/src/App.js",["72"],"/Users/porterhunley/mediboard/mediboard-front/src/header/Header.js",["73","74","75","76","77"],"import { React, useState } from 'react'\nimport { withStyles, makeStyles, fade } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport DrugsHttpClient from '../clientapis/DrugsHttpClient';\n\nconst drugsHttpClient = new DrugsHttpClient();\n\nconst StyledButton = withStyles({\n  root: {\n    background: '#d44344',\n    borderRadius: 4,\n    border: 0,\n    color: 'white',\n    height: 50,\n    width: 110,\n  },\n  label: {\n    textTransform: 'capitalize',\n  },\n})(Button);\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n    marginBottom: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('lg')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 150,\n    width: '100%',\n    [theme.breakpoints.up('lg')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'relative',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nconst topDrugs = [\n  { title: 'BLAK' },\n  { title: 'WHITE'}\n]\n\nexport default function Header(props) {\n  const [state, setState] = useState({\n    'searchData': [],\n  })\n\n\tconst classes = useStyles();\n\n  const handleSearchOpen = (e) => {\n    e.target.loading = true;\n\n    drugsHttpClient.getTopDrugs().then((response) => {\n      setState(prevState => ({\n        ...prevState,\n        'searchData': response.message.drugs\n      }));\n    }).catch((error) => {\n      alert(\"Error getting top drugs\");\n      console.log(error);\n    }).finally(() => {\n      e.target.loading = false;\n    });\n  }\n\n  const handleSearchOptionSelect = (value) => {\n    if (value != null) {\n      props.setSelectedDrug(value.name);\n    }\n  }\n\n\treturn (\n\t\t<div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Mediboard\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <Autocomplete\n              id=\"combo-box-demo\"\n              options={state.searchData}\n              getOptionLabel={(option) => option.name}\n              onChange={(event, newValue) => {\n                handleSearchOptionSelect(newValue);\n              }}\n              style={{ width: 300 }}\n              onOpen={(e) => handleSearchOpen(e)}\n              renderInput={(params) => <TextField {...params} label=\"Drug Search\" variant=\"outlined\" />}\n            />\n          </div>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </div>\n\t\t)\n}\n\n\n\n",["78","79"],"/Users/porterhunley/mediboard/mediboard-front/src/constants/apiconstants.js",[],"/Users/porterhunley/mediboard/mediboard-front/src/clientapis/DrugsHttpClient.js",[],"/Users/porterhunley/mediboard/mediboard-front/src/body/effects/EffectsChart.js",[],"/Users/porterhunley/mediboard/mediboard-front/src/body/DrugOverview.js",["80","81"],"import { React, useState, useEffect } from 'react';\n\nimport EffectsChart from './effects/EffectsChart';\nimport DrugsHttpClient from '../clientapis/DrugsHttpClient';\n\n\nconst drugsHttpClient = new DrugsHttpClient();\n\nexport default function DrugOverview(props){\n\n\tconst [state, setState] = useState({\n\t\t'effectsData': []\n\t});\n\n\tuseEffect(() => {getEffectsData(props.selectedDrug)}, [props.selectedDrug]);\n\n\tconst effectsToChartData = (effects) => {\n\t\tif (effects == null || effects == {}) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\teffects.sort((a, b) => {return b.no_effected - a.no_effected});\n\t\tvar chartEffects = effects.slice(0, 5).map(effect => {\n\t\t\treturn {\n\t\t\t\t\"symptom\": effect.name,\n\t\t\t\t\"frequency\": effect.percent_effected\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\t'chartData': chartEffects\n\t\t}\n\t}\n\n\tconst getEffectsData = async (drug) => { //TODO have this set some kind of loading bar\n\t\tvar data = drugsHttpClient.getEffects(drug).then((data) => {\n\t\t\tsetState(prevState => ({\n\t\t\t\t...prevState,\n\t\t\t\teffectsData: data.message.effects\n\t\t\t}));\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t});\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<EffectsChart {...effectsToChartData(state.effectsData)}/>\n\t\t</div>\n\t\t)\n}","/Users/porterhunley/mediboard/mediboard-front/src/InfoPage.js",[],"/Users/porterhunley/mediboard/mediboard-front/src/body/SideBar.js",["82","83"],"import { React, useState } from 'react'\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\tcontainer: {\n\t\twidth: 200,\n\t\tbackgroundColor: '#e7e7e7',\n\t\ttextAlign: 'center',\n\t\tpaddingTop: 10,\n\t\tpaddingBottom: 10,\n\t}\n}));\n\nexport default function SideBar() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<p>Overview</p>\t\n\t\t\t<p>Effects</p>\t\n\t\t\t<p>Uses</p>\t\n\t\t\t<p>Reviews</p>\n\t\t\t<p>Posts</p>\n\t\t</div>\t\n\t\t)\t\t\n}\n",["84","85"],"/Users/porterhunley/mediboard/mediboard-front/src/body/registration/registrationForm.js",["86","87"],"import { React, useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n \troot: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\nexport default function RegistrationForm() {\n\n\tconst classes = useStyles();\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField error id=\"standard-error\" label=\"Error\" defaultValue=\"Hello World\" />\n        <TextField\n          error\n          id=\"standard-error-helper-text\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          helperText=\"Incorrect entry.\"\n        />\n      </div>\n      <div>\n        <TextField\n          error\n          id=\"filled-error\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          variant=\"filled\"\n        />\n        <TextField\n          error\n          id=\"filled-error-helper-text\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          helperText=\"Incorrect entry.\"\n          variant=\"filled\"\n        />\n      </div>\n      <div>\n        <TextField\n          error\n          id=\"outlined-error\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          variant=\"outlined\"\n        />\n        <TextField\n          error\n          id=\"outlined-error-helper-text\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          helperText=\"Incorrect entry.\"\n          variant=\"outlined\"\n        />\n      </div>\n    </form>\n  \t)\n}\n","/Users/porterhunley/mediboard/mediboard-front/src/body/registration/registrationDisplay.js",["88","89"],"/Users/porterhunley/mediboard/mediboard-front/src/body/Banner.js",["90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":20},{"ruleId":"96","severity":1,"message":"100","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":18},{"ruleId":"96","severity":1,"message":"101","line":12,"column":7,"nodeType":"98","messageId":"99","endLine":12,"endColumn":22},{"ruleId":"96","severity":1,"message":"102","line":1,"column":8,"nodeType":"98","messageId":"99","endLine":1,"endColumn":12},{"ruleId":"96","severity":1,"message":"103","line":7,"column":8,"nodeType":"98","messageId":"99","endLine":7,"endColumn":18},{"ruleId":"96","severity":1,"message":"104","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":17},{"ruleId":"96","severity":1,"message":"105","line":10,"column":8,"nodeType":"98","messageId":"99","endLine":10,"endColumn":13},{"ruleId":"96","severity":1,"message":"106","line":19,"column":7,"nodeType":"98","messageId":"99","endLine":19,"endColumn":19},{"ruleId":"96","severity":1,"message":"107","line":83,"column":7,"nodeType":"98","messageId":"99","endLine":83,"endColumn":15},{"ruleId":"92","replacedBy":"108"},{"ruleId":"94","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":18,"column":34,"nodeType":"112","messageId":"113","endLine":18,"endColumn":36},{"ruleId":"96","severity":1,"message":"114","line":36,"column":7,"nodeType":"98","messageId":"99","endLine":36,"endColumn":11},{"ruleId":"96","severity":1,"message":"115","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":20},{"ruleId":"92","replacedBy":"116"},{"ruleId":"94","replacedBy":"117"},{"ruleId":"96","severity":1,"message":"115","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":20},{"ruleId":"96","severity":1,"message":"115","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":20},{"ruleId":"96","severity":1,"message":"115","line":2,"column":17,"nodeType":"98","messageId":"99","endLine":2,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":20},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'withStyles' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'drugsHttpClient' is assigned a value but never used.","'logo' is defined but never used.","'IconButton' is defined but never used.","'InputBase' is defined but never used.","'Badge' is defined but never used.","'StyledButton' is assigned a value but never used.","'topDrugs' is assigned a value but never used.",["118"],["119"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'useState' is defined but never used.",["118"],["119"],"no-global-assign","no-unsafe-negation"]